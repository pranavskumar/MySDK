/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolCreateRequest{}

// OriginPoolCreateRequest This is the input message of the 'Create' RPC
type OriginPoolCreateRequest struct {
	Metadata *SchemaObjectCreateMetaType `json:"metadata,omitempty"`
	Spec *ViewsoriginPoolCreateSpecType `json:"spec,omitempty"`
}

// NewOriginPoolCreateRequest instantiates a new OriginPoolCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolCreateRequest() *OriginPoolCreateRequest {
	this := OriginPoolCreateRequest{}
	return &this
}

// NewOriginPoolCreateRequestWithDefaults instantiates a new OriginPoolCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolCreateRequestWithDefaults() *OriginPoolCreateRequest {
	this := OriginPoolCreateRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OriginPoolCreateRequest) GetMetadata() SchemaObjectCreateMetaType {
	if o == nil || IsNil(o.Metadata) {
		var ret SchemaObjectCreateMetaType
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolCreateRequest) GetMetadataOk() (*SchemaObjectCreateMetaType, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OriginPoolCreateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SchemaObjectCreateMetaType and assigns it to the Metadata field.
func (o *OriginPoolCreateRequest) SetMetadata(v SchemaObjectCreateMetaType) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *OriginPoolCreateRequest) GetSpec() ViewsoriginPoolCreateSpecType {
	if o == nil || IsNil(o.Spec) {
		var ret ViewsoriginPoolCreateSpecType
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolCreateRequest) GetSpecOk() (*ViewsoriginPoolCreateSpecType, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *OriginPoolCreateRequest) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given ViewsoriginPoolCreateSpecType and assigns it to the Spec field.
func (o *OriginPoolCreateRequest) SetSpec(v ViewsoriginPoolCreateSpecType) {
	o.Spec = &v
}

func (o OriginPoolCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	return toSerialize, nil
}

type NullableOriginPoolCreateRequest struct {
	value *OriginPoolCreateRequest
	isSet bool
}

func (v NullableOriginPoolCreateRequest) Get() *OriginPoolCreateRequest {
	return v.value
}

func (v *NullableOriginPoolCreateRequest) Set(val *OriginPoolCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolCreateRequest(val *OriginPoolCreateRequest) *NullableOriginPoolCreateRequest {
	return &NullableOriginPoolCreateRequest{value: val, isSet: true}
}

func (v NullableOriginPoolCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


