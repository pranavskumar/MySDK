/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerConsulService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerConsulService{}

// OriginPoolOriginServerConsulService Specify origin server with Hashi Corp Consul service name and site information
type OriginPoolOriginServerConsulService struct {
	// This can be used for messages where no values are needed
	InsideNetwork map[string]interface{} `json:"inside_network,omitempty"`
	// This can be used for messages where no values are needed
	OutsideNetwork map[string]interface{} `json:"outside_network,omitempty"`
	//  Consul service name of this origin server, including cluster-id.  The format is servicename:cluster-id. If the servicename is \"frontend\",  and cluster-id is \"prod\", then you will enter \"frontend:prod\".  cluster-id is optional.  Example: ` \"matching:production\"`  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true 
	ServiceName *string `json:"service_name,omitempty"`
	SiteLocator *ViewsSiteLocator `json:"site_locator,omitempty"`
}

// NewOriginPoolOriginServerConsulService instantiates a new OriginPoolOriginServerConsulService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerConsulService() *OriginPoolOriginServerConsulService {
	this := OriginPoolOriginServerConsulService{}
	return &this
}

// NewOriginPoolOriginServerConsulServiceWithDefaults instantiates a new OriginPoolOriginServerConsulService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerConsulServiceWithDefaults() *OriginPoolOriginServerConsulService {
	this := OriginPoolOriginServerConsulService{}
	return &this
}

// GetInsideNetwork returns the InsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerConsulService) GetInsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.InsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.InsideNetwork
}

// GetInsideNetworkOk returns a tuple with the InsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerConsulService) GetInsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.InsideNetwork, true
}

// HasInsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerConsulService) HasInsideNetwork() bool {
	if o != nil && !IsNil(o.InsideNetwork) {
		return true
	}

	return false
}

// SetInsideNetwork gets a reference to the given map[string]interface{} and assigns it to the InsideNetwork field.
func (o *OriginPoolOriginServerConsulService) SetInsideNetwork(v map[string]interface{}) {
	o.InsideNetwork = v
}

// GetOutsideNetwork returns the OutsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerConsulService) GetOutsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.OutsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutsideNetwork
}

// GetOutsideNetworkOk returns a tuple with the OutsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerConsulService) GetOutsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.OutsideNetwork, true
}

// HasOutsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerConsulService) HasOutsideNetwork() bool {
	if o != nil && !IsNil(o.OutsideNetwork) {
		return true
	}

	return false
}

// SetOutsideNetwork gets a reference to the given map[string]interface{} and assigns it to the OutsideNetwork field.
func (o *OriginPoolOriginServerConsulService) SetOutsideNetwork(v map[string]interface{}) {
	o.OutsideNetwork = v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *OriginPoolOriginServerConsulService) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerConsulService) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *OriginPoolOriginServerConsulService) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *OriginPoolOriginServerConsulService) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetSiteLocator returns the SiteLocator field value if set, zero value otherwise.
func (o *OriginPoolOriginServerConsulService) GetSiteLocator() ViewsSiteLocator {
	if o == nil || IsNil(o.SiteLocator) {
		var ret ViewsSiteLocator
		return ret
	}
	return *o.SiteLocator
}

// GetSiteLocatorOk returns a tuple with the SiteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerConsulService) GetSiteLocatorOk() (*ViewsSiteLocator, bool) {
	if o == nil || IsNil(o.SiteLocator) {
		return nil, false
	}
	return o.SiteLocator, true
}

// HasSiteLocator returns a boolean if a field has been set.
func (o *OriginPoolOriginServerConsulService) HasSiteLocator() bool {
	if o != nil && !IsNil(o.SiteLocator) {
		return true
	}

	return false
}

// SetSiteLocator gets a reference to the given ViewsSiteLocator and assigns it to the SiteLocator field.
func (o *OriginPoolOriginServerConsulService) SetSiteLocator(v ViewsSiteLocator) {
	o.SiteLocator = &v
}

func (o OriginPoolOriginServerConsulService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerConsulService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InsideNetwork) {
		toSerialize["inside_network"] = o.InsideNetwork
	}
	if !IsNil(o.OutsideNetwork) {
		toSerialize["outside_network"] = o.OutsideNetwork
	}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.SiteLocator) {
		toSerialize["site_locator"] = o.SiteLocator
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerConsulService struct {
	value *OriginPoolOriginServerConsulService
	isSet bool
}

func (v NullableOriginPoolOriginServerConsulService) Get() *OriginPoolOriginServerConsulService {
	return v.value
}

func (v *NullableOriginPoolOriginServerConsulService) Set(val *OriginPoolOriginServerConsulService) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerConsulService) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerConsulService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerConsulService(val *OriginPoolOriginServerConsulService) *NullableOriginPoolOriginServerConsulService {
	return &NullableOriginPoolOriginServerConsulService{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerConsulService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerConsulService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


