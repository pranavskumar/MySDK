/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolTlsCertificatesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolTlsCertificatesType{}

// OriginPoolTlsCertificatesType TLS Certificates
type OriginPoolTlsCertificatesType struct {
	//  TLS Certificates  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true   ves.io.schema.rules.repeated.max_items: 16   ves.io.schema.rules.repeated.min_items: 1 
	TlsCertificates []SchemaTlsCertificateType `json:"tls_certificates,omitempty"`
}

// NewOriginPoolTlsCertificatesType instantiates a new OriginPoolTlsCertificatesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolTlsCertificatesType() *OriginPoolTlsCertificatesType {
	this := OriginPoolTlsCertificatesType{}
	return &this
}

// NewOriginPoolTlsCertificatesTypeWithDefaults instantiates a new OriginPoolTlsCertificatesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolTlsCertificatesTypeWithDefaults() *OriginPoolTlsCertificatesType {
	this := OriginPoolTlsCertificatesType{}
	return &this
}

// GetTlsCertificates returns the TlsCertificates field value if set, zero value otherwise.
func (o *OriginPoolTlsCertificatesType) GetTlsCertificates() []SchemaTlsCertificateType {
	if o == nil || IsNil(o.TlsCertificates) {
		var ret []SchemaTlsCertificateType
		return ret
	}
	return o.TlsCertificates
}

// GetTlsCertificatesOk returns a tuple with the TlsCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolTlsCertificatesType) GetTlsCertificatesOk() ([]SchemaTlsCertificateType, bool) {
	if o == nil || IsNil(o.TlsCertificates) {
		return nil, false
	}
	return o.TlsCertificates, true
}

// HasTlsCertificates returns a boolean if a field has been set.
func (o *OriginPoolTlsCertificatesType) HasTlsCertificates() bool {
	if o != nil && !IsNil(o.TlsCertificates) {
		return true
	}

	return false
}

// SetTlsCertificates gets a reference to the given []SchemaTlsCertificateType and assigns it to the TlsCertificates field.
func (o *OriginPoolTlsCertificatesType) SetTlsCertificates(v []SchemaTlsCertificateType) {
	o.TlsCertificates = v
}

func (o OriginPoolTlsCertificatesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolTlsCertificatesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TlsCertificates) {
		toSerialize["tls_certificates"] = o.TlsCertificates
	}
	return toSerialize, nil
}

type NullableOriginPoolTlsCertificatesType struct {
	value *OriginPoolTlsCertificatesType
	isSet bool
}

func (v NullableOriginPoolTlsCertificatesType) Get() *OriginPoolTlsCertificatesType {
	return v.value
}

func (v *NullableOriginPoolTlsCertificatesType) Set(val *OriginPoolTlsCertificatesType) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolTlsCertificatesType) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolTlsCertificatesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolTlsCertificatesType(val *OriginPoolTlsCertificatesType) *NullableOriginPoolTlsCertificatesType {
	return &NullableOriginPoolTlsCertificatesType{value: val, isSet: true}
}

func (v NullableOriginPoolTlsCertificatesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolTlsCertificatesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


