/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerSegmentIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerSegmentIP{}

// OriginPoolOriginServerSegmentIP x-displayName: \"IP address of Origin server in Segment on given Site\" Specify origin server with IP address in a Segment on given Site
type OriginPoolOriginServerSegmentIP struct {
	// x-displayName: \"IP\" x-example: \"8.8.8.8\" Private IPV4 address
	Ip *string `json:"ip,omitempty"`
	// x-displayName: \"IP6\" x-example: \"2001::10\" Private IPV6 address
	Ipv6 *string `json:"ipv6,omitempty"`
	Segment *SchemaviewsObjectRefType `json:"segment,omitempty"`
	SiteLocator *ViewsSiteRegionLocator `json:"site_locator,omitempty"`
}

// NewOriginPoolOriginServerSegmentIP instantiates a new OriginPoolOriginServerSegmentIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerSegmentIP() *OriginPoolOriginServerSegmentIP {
	this := OriginPoolOriginServerSegmentIP{}
	return &this
}

// NewOriginPoolOriginServerSegmentIPWithDefaults instantiates a new OriginPoolOriginServerSegmentIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerSegmentIPWithDefaults() *OriginPoolOriginServerSegmentIP {
	this := OriginPoolOriginServerSegmentIP{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *OriginPoolOriginServerSegmentIP) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerSegmentIP) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *OriginPoolOriginServerSegmentIP) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *OriginPoolOriginServerSegmentIP) SetIp(v string) {
	o.Ip = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *OriginPoolOriginServerSegmentIP) GetIpv6() string {
	if o == nil || IsNil(o.Ipv6) {
		var ret string
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerSegmentIP) GetIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *OriginPoolOriginServerSegmentIP) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given string and assigns it to the Ipv6 field.
func (o *OriginPoolOriginServerSegmentIP) SetIpv6(v string) {
	o.Ipv6 = &v
}

// GetSegment returns the Segment field value if set, zero value otherwise.
func (o *OriginPoolOriginServerSegmentIP) GetSegment() SchemaviewsObjectRefType {
	if o == nil || IsNil(o.Segment) {
		var ret SchemaviewsObjectRefType
		return ret
	}
	return *o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerSegmentIP) GetSegmentOk() (*SchemaviewsObjectRefType, bool) {
	if o == nil || IsNil(o.Segment) {
		return nil, false
	}
	return o.Segment, true
}

// HasSegment returns a boolean if a field has been set.
func (o *OriginPoolOriginServerSegmentIP) HasSegment() bool {
	if o != nil && !IsNil(o.Segment) {
		return true
	}

	return false
}

// SetSegment gets a reference to the given SchemaviewsObjectRefType and assigns it to the Segment field.
func (o *OriginPoolOriginServerSegmentIP) SetSegment(v SchemaviewsObjectRefType) {
	o.Segment = &v
}

// GetSiteLocator returns the SiteLocator field value if set, zero value otherwise.
func (o *OriginPoolOriginServerSegmentIP) GetSiteLocator() ViewsSiteRegionLocator {
	if o == nil || IsNil(o.SiteLocator) {
		var ret ViewsSiteRegionLocator
		return ret
	}
	return *o.SiteLocator
}

// GetSiteLocatorOk returns a tuple with the SiteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerSegmentIP) GetSiteLocatorOk() (*ViewsSiteRegionLocator, bool) {
	if o == nil || IsNil(o.SiteLocator) {
		return nil, false
	}
	return o.SiteLocator, true
}

// HasSiteLocator returns a boolean if a field has been set.
func (o *OriginPoolOriginServerSegmentIP) HasSiteLocator() bool {
	if o != nil && !IsNil(o.SiteLocator) {
		return true
	}

	return false
}

// SetSiteLocator gets a reference to the given ViewsSiteRegionLocator and assigns it to the SiteLocator field.
func (o *OriginPoolOriginServerSegmentIP) SetSiteLocator(v ViewsSiteRegionLocator) {
	o.SiteLocator = &v
}

func (o OriginPoolOriginServerSegmentIP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerSegmentIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if !IsNil(o.Segment) {
		toSerialize["segment"] = o.Segment
	}
	if !IsNil(o.SiteLocator) {
		toSerialize["site_locator"] = o.SiteLocator
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerSegmentIP struct {
	value *OriginPoolOriginServerSegmentIP
	isSet bool
}

func (v NullableOriginPoolOriginServerSegmentIP) Get() *OriginPoolOriginServerSegmentIP {
	return v.value
}

func (v *NullableOriginPoolOriginServerSegmentIP) Set(val *OriginPoolOriginServerSegmentIP) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerSegmentIP) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerSegmentIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerSegmentIP(val *OriginPoolOriginServerSegmentIP) *NullableOriginPoolOriginServerSegmentIP {
	return &NullableOriginPoolOriginServerSegmentIP{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerSegmentIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerSegmentIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


