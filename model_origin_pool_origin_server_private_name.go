/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerPrivateName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerPrivateName{}

// OriginPoolOriginServerPrivateName Specify origin server with private or public DNS name and site information
type OriginPoolOriginServerPrivateName struct {
	//  DNS Name  Example: ` \"value\"`  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true 
	DnsName *string `json:"dns_name,omitempty"`
	// This can be used for messages where no values are needed
	InsideNetwork map[string]interface{} `json:"inside_network,omitempty"`
	// This can be used for messages where no values are needed
	OutsideNetwork map[string]interface{} `json:"outside_network,omitempty"`
	//  Interval for DNS refresh in seconds.  Max value is 7 days as per https://datatracker.ietf.org/doc/html/rfc8767  Example: ` \"20\"`  Validation Rules:   ves.io.schema.rules.uint32.lte: 604800 
	RefreshInterval *int64 `json:"refresh_interval,omitempty"`
	SiteLocator *ViewsSiteLocator `json:"site_locator,omitempty"`
}

// NewOriginPoolOriginServerPrivateName instantiates a new OriginPoolOriginServerPrivateName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerPrivateName() *OriginPoolOriginServerPrivateName {
	this := OriginPoolOriginServerPrivateName{}
	return &this
}

// NewOriginPoolOriginServerPrivateNameWithDefaults instantiates a new OriginPoolOriginServerPrivateName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerPrivateNameWithDefaults() *OriginPoolOriginServerPrivateName {
	this := OriginPoolOriginServerPrivateName{}
	return &this
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateName) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateName) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateName) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *OriginPoolOriginServerPrivateName) SetDnsName(v string) {
	o.DnsName = &v
}

// GetInsideNetwork returns the InsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateName) GetInsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.InsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.InsideNetwork
}

// GetInsideNetworkOk returns a tuple with the InsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateName) GetInsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.InsideNetwork, true
}

// HasInsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateName) HasInsideNetwork() bool {
	if o != nil && !IsNil(o.InsideNetwork) {
		return true
	}

	return false
}

// SetInsideNetwork gets a reference to the given map[string]interface{} and assigns it to the InsideNetwork field.
func (o *OriginPoolOriginServerPrivateName) SetInsideNetwork(v map[string]interface{}) {
	o.InsideNetwork = v
}

// GetOutsideNetwork returns the OutsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateName) GetOutsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.OutsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutsideNetwork
}

// GetOutsideNetworkOk returns a tuple with the OutsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateName) GetOutsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.OutsideNetwork, true
}

// HasOutsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateName) HasOutsideNetwork() bool {
	if o != nil && !IsNil(o.OutsideNetwork) {
		return true
	}

	return false
}

// SetOutsideNetwork gets a reference to the given map[string]interface{} and assigns it to the OutsideNetwork field.
func (o *OriginPoolOriginServerPrivateName) SetOutsideNetwork(v map[string]interface{}) {
	o.OutsideNetwork = v
}

// GetRefreshInterval returns the RefreshInterval field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateName) GetRefreshInterval() int64 {
	if o == nil || IsNil(o.RefreshInterval) {
		var ret int64
		return ret
	}
	return *o.RefreshInterval
}

// GetRefreshIntervalOk returns a tuple with the RefreshInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateName) GetRefreshIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.RefreshInterval) {
		return nil, false
	}
	return o.RefreshInterval, true
}

// HasRefreshInterval returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateName) HasRefreshInterval() bool {
	if o != nil && !IsNil(o.RefreshInterval) {
		return true
	}

	return false
}

// SetRefreshInterval gets a reference to the given int64 and assigns it to the RefreshInterval field.
func (o *OriginPoolOriginServerPrivateName) SetRefreshInterval(v int64) {
	o.RefreshInterval = &v
}

// GetSiteLocator returns the SiteLocator field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateName) GetSiteLocator() ViewsSiteLocator {
	if o == nil || IsNil(o.SiteLocator) {
		var ret ViewsSiteLocator
		return ret
	}
	return *o.SiteLocator
}

// GetSiteLocatorOk returns a tuple with the SiteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateName) GetSiteLocatorOk() (*ViewsSiteLocator, bool) {
	if o == nil || IsNil(o.SiteLocator) {
		return nil, false
	}
	return o.SiteLocator, true
}

// HasSiteLocator returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateName) HasSiteLocator() bool {
	if o != nil && !IsNil(o.SiteLocator) {
		return true
	}

	return false
}

// SetSiteLocator gets a reference to the given ViewsSiteLocator and assigns it to the SiteLocator field.
func (o *OriginPoolOriginServerPrivateName) SetSiteLocator(v ViewsSiteLocator) {
	o.SiteLocator = &v
}

func (o OriginPoolOriginServerPrivateName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerPrivateName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsName) {
		toSerialize["dns_name"] = o.DnsName
	}
	if !IsNil(o.InsideNetwork) {
		toSerialize["inside_network"] = o.InsideNetwork
	}
	if !IsNil(o.OutsideNetwork) {
		toSerialize["outside_network"] = o.OutsideNetwork
	}
	if !IsNil(o.RefreshInterval) {
		toSerialize["refresh_interval"] = o.RefreshInterval
	}
	if !IsNil(o.SiteLocator) {
		toSerialize["site_locator"] = o.SiteLocator
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerPrivateName struct {
	value *OriginPoolOriginServerPrivateName
	isSet bool
}

func (v NullableOriginPoolOriginServerPrivateName) Get() *OriginPoolOriginServerPrivateName {
	return v.value
}

func (v *NullableOriginPoolOriginServerPrivateName) Set(val *OriginPoolOriginServerPrivateName) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerPrivateName) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerPrivateName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerPrivateName(val *OriginPoolOriginServerPrivateName) *NullableOriginPoolOriginServerPrivateName {
	return &NullableOriginPoolOriginServerPrivateName{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerPrivateName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerPrivateName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


