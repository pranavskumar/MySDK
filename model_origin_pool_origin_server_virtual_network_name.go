/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerVirtualNetworkName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerVirtualNetworkName{}

// OriginPoolOriginServerVirtualNetworkName Specify origin server with DNS name on Virtual Network
type OriginPoolOriginServerVirtualNetworkName struct {
	//  DNS Name  Example: ` \"value\"`  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true 
	DnsName *string `json:"dns_name,omitempty"`
	PrivateNetwork *SchemaviewsObjectRefType `json:"private_network,omitempty"`
}

// NewOriginPoolOriginServerVirtualNetworkName instantiates a new OriginPoolOriginServerVirtualNetworkName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerVirtualNetworkName() *OriginPoolOriginServerVirtualNetworkName {
	this := OriginPoolOriginServerVirtualNetworkName{}
	return &this
}

// NewOriginPoolOriginServerVirtualNetworkNameWithDefaults instantiates a new OriginPoolOriginServerVirtualNetworkName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerVirtualNetworkNameWithDefaults() *OriginPoolOriginServerVirtualNetworkName {
	this := OriginPoolOriginServerVirtualNetworkName{}
	return &this
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *OriginPoolOriginServerVirtualNetworkName) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerVirtualNetworkName) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *OriginPoolOriginServerVirtualNetworkName) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *OriginPoolOriginServerVirtualNetworkName) SetDnsName(v string) {
	o.DnsName = &v
}

// GetPrivateNetwork returns the PrivateNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerVirtualNetworkName) GetPrivateNetwork() SchemaviewsObjectRefType {
	if o == nil || IsNil(o.PrivateNetwork) {
		var ret SchemaviewsObjectRefType
		return ret
	}
	return *o.PrivateNetwork
}

// GetPrivateNetworkOk returns a tuple with the PrivateNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerVirtualNetworkName) GetPrivateNetworkOk() (*SchemaviewsObjectRefType, bool) {
	if o == nil || IsNil(o.PrivateNetwork) {
		return nil, false
	}
	return o.PrivateNetwork, true
}

// HasPrivateNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerVirtualNetworkName) HasPrivateNetwork() bool {
	if o != nil && !IsNil(o.PrivateNetwork) {
		return true
	}

	return false
}

// SetPrivateNetwork gets a reference to the given SchemaviewsObjectRefType and assigns it to the PrivateNetwork field.
func (o *OriginPoolOriginServerVirtualNetworkName) SetPrivateNetwork(v SchemaviewsObjectRefType) {
	o.PrivateNetwork = &v
}

func (o OriginPoolOriginServerVirtualNetworkName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerVirtualNetworkName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsName) {
		toSerialize["dns_name"] = o.DnsName
	}
	if !IsNil(o.PrivateNetwork) {
		toSerialize["private_network"] = o.PrivateNetwork
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerVirtualNetworkName struct {
	value *OriginPoolOriginServerVirtualNetworkName
	isSet bool
}

func (v NullableOriginPoolOriginServerVirtualNetworkName) Get() *OriginPoolOriginServerVirtualNetworkName {
	return v.value
}

func (v *NullableOriginPoolOriginServerVirtualNetworkName) Set(val *OriginPoolOriginServerVirtualNetworkName) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerVirtualNetworkName) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerVirtualNetworkName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerVirtualNetworkName(val *OriginPoolOriginServerVirtualNetworkName) *NullableOriginPoolOriginServerVirtualNetworkName {
	return &NullableOriginPoolOriginServerVirtualNetworkName{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerVirtualNetworkName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerVirtualNetworkName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


