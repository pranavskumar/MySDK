/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerVirtualNetworkIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerVirtualNetworkIP{}

// OriginPoolOriginServerVirtualNetworkIP Specify origin server with IP on Virtual Network
type OriginPoolOriginServerVirtualNetworkIP struct {
	// Exclusive with []  IPV4 address  Example: ` \"1.1.1.1\"`  Validation Rules:   ves.io.schema.rules.string.ipv4: true 
	Ip *string `json:"ip,omitempty"`
	VirtualNetwork *SchemaviewsObjectRefType `json:"virtual_network,omitempty"`
}

// NewOriginPoolOriginServerVirtualNetworkIP instantiates a new OriginPoolOriginServerVirtualNetworkIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerVirtualNetworkIP() *OriginPoolOriginServerVirtualNetworkIP {
	this := OriginPoolOriginServerVirtualNetworkIP{}
	return &this
}

// NewOriginPoolOriginServerVirtualNetworkIPWithDefaults instantiates a new OriginPoolOriginServerVirtualNetworkIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerVirtualNetworkIPWithDefaults() *OriginPoolOriginServerVirtualNetworkIP {
	this := OriginPoolOriginServerVirtualNetworkIP{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *OriginPoolOriginServerVirtualNetworkIP) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerVirtualNetworkIP) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *OriginPoolOriginServerVirtualNetworkIP) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *OriginPoolOriginServerVirtualNetworkIP) SetIp(v string) {
	o.Ip = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerVirtualNetworkIP) GetVirtualNetwork() SchemaviewsObjectRefType {
	if o == nil || IsNil(o.VirtualNetwork) {
		var ret SchemaviewsObjectRefType
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerVirtualNetworkIP) GetVirtualNetworkOk() (*SchemaviewsObjectRefType, bool) {
	if o == nil || IsNil(o.VirtualNetwork) {
		return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerVirtualNetworkIP) HasVirtualNetwork() bool {
	if o != nil && !IsNil(o.VirtualNetwork) {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given SchemaviewsObjectRefType and assigns it to the VirtualNetwork field.
func (o *OriginPoolOriginServerVirtualNetworkIP) SetVirtualNetwork(v SchemaviewsObjectRefType) {
	o.VirtualNetwork = &v
}

func (o OriginPoolOriginServerVirtualNetworkIP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerVirtualNetworkIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.VirtualNetwork) {
		toSerialize["virtual_network"] = o.VirtualNetwork
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerVirtualNetworkIP struct {
	value *OriginPoolOriginServerVirtualNetworkIP
	isSet bool
}

func (v NullableOriginPoolOriginServerVirtualNetworkIP) Get() *OriginPoolOriginServerVirtualNetworkIP {
	return v.value
}

func (v *NullableOriginPoolOriginServerVirtualNetworkIP) Set(val *OriginPoolOriginServerVirtualNetworkIP) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerVirtualNetworkIP) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerVirtualNetworkIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerVirtualNetworkIP(val *OriginPoolOriginServerVirtualNetworkIP) *NullableOriginPoolOriginServerVirtualNetworkIP {
	return &NullableOriginPoolOriginServerVirtualNetworkIP{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerVirtualNetworkIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerVirtualNetworkIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


