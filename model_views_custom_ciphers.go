/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ViewsCustomCiphers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewsCustomCiphers{}

// ViewsCustomCiphers This defines TLS protocol config including min/max versions and allowed ciphers
type ViewsCustomCiphers struct {
	//  The TLS listener will only support the specified cipher list.  Example: ` \"TLS_AES_128_GCM_SHA256\"`  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true   ves.io.schema.rules.repeated.items.string.in: [\\\"TLS_AES_128_GCM_SHA256\\\",\\\"TLS_AES_256_GCM_SHA384\\\",\\\"TLS_CHACHA20_POLY1305_SHA256\\\",\\\"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\\\",\\\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\\\",\\\"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\\\",\\\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\\\",\\\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\\\",\\\"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\\\",\\\"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\\\",\\\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\\\",\\\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\\\",\\\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\\\",\\\"TLS_RSA_WITH_AES_128_CBC_SHA\\\",\\\"TLS_RSA_WITH_AES_128_GCM_SHA256\\\",\\\"TLS_RSA_WITH_AES_256_CBC_SHA\\\",\\\"TLS_RSA_WITH_AES_256_GCM_SHA384\\\"]   ves.io.schema.rules.repeated.unique: true 
	CipherSuites []string `json:"cipher_suites,omitempty"`
	MaxVersion *SchemaTlsProtocol `json:"max_version,omitempty"`
	MinVersion *SchemaTlsProtocol `json:"min_version,omitempty"`
}

// NewViewsCustomCiphers instantiates a new ViewsCustomCiphers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewsCustomCiphers() *ViewsCustomCiphers {
	this := ViewsCustomCiphers{}
	var maxVersion SchemaTlsProtocol = TLS_AUTO
	this.MaxVersion = &maxVersion
	var minVersion SchemaTlsProtocol = TLS_AUTO
	this.MinVersion = &minVersion
	return &this
}

// NewViewsCustomCiphersWithDefaults instantiates a new ViewsCustomCiphers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewsCustomCiphersWithDefaults() *ViewsCustomCiphers {
	this := ViewsCustomCiphers{}
	var maxVersion SchemaTlsProtocol = TLS_AUTO
	this.MaxVersion = &maxVersion
	var minVersion SchemaTlsProtocol = TLS_AUTO
	this.MinVersion = &minVersion
	return &this
}

// GetCipherSuites returns the CipherSuites field value if set, zero value otherwise.
func (o *ViewsCustomCiphers) GetCipherSuites() []string {
	if o == nil || IsNil(o.CipherSuites) {
		var ret []string
		return ret
	}
	return o.CipherSuites
}

// GetCipherSuitesOk returns a tuple with the CipherSuites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsCustomCiphers) GetCipherSuitesOk() ([]string, bool) {
	if o == nil || IsNil(o.CipherSuites) {
		return nil, false
	}
	return o.CipherSuites, true
}

// HasCipherSuites returns a boolean if a field has been set.
func (o *ViewsCustomCiphers) HasCipherSuites() bool {
	if o != nil && !IsNil(o.CipherSuites) {
		return true
	}

	return false
}

// SetCipherSuites gets a reference to the given []string and assigns it to the CipherSuites field.
func (o *ViewsCustomCiphers) SetCipherSuites(v []string) {
	o.CipherSuites = v
}

// GetMaxVersion returns the MaxVersion field value if set, zero value otherwise.
func (o *ViewsCustomCiphers) GetMaxVersion() SchemaTlsProtocol {
	if o == nil || IsNil(o.MaxVersion) {
		var ret SchemaTlsProtocol
		return ret
	}
	return *o.MaxVersion
}

// GetMaxVersionOk returns a tuple with the MaxVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsCustomCiphers) GetMaxVersionOk() (*SchemaTlsProtocol, bool) {
	if o == nil || IsNil(o.MaxVersion) {
		return nil, false
	}
	return o.MaxVersion, true
}

// HasMaxVersion returns a boolean if a field has been set.
func (o *ViewsCustomCiphers) HasMaxVersion() bool {
	if o != nil && !IsNil(o.MaxVersion) {
		return true
	}

	return false
}

// SetMaxVersion gets a reference to the given SchemaTlsProtocol and assigns it to the MaxVersion field.
func (o *ViewsCustomCiphers) SetMaxVersion(v SchemaTlsProtocol) {
	o.MaxVersion = &v
}

// GetMinVersion returns the MinVersion field value if set, zero value otherwise.
func (o *ViewsCustomCiphers) GetMinVersion() SchemaTlsProtocol {
	if o == nil || IsNil(o.MinVersion) {
		var ret SchemaTlsProtocol
		return ret
	}
	return *o.MinVersion
}

// GetMinVersionOk returns a tuple with the MinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsCustomCiphers) GetMinVersionOk() (*SchemaTlsProtocol, bool) {
	if o == nil || IsNil(o.MinVersion) {
		return nil, false
	}
	return o.MinVersion, true
}

// HasMinVersion returns a boolean if a field has been set.
func (o *ViewsCustomCiphers) HasMinVersion() bool {
	if o != nil && !IsNil(o.MinVersion) {
		return true
	}

	return false
}

// SetMinVersion gets a reference to the given SchemaTlsProtocol and assigns it to the MinVersion field.
func (o *ViewsCustomCiphers) SetMinVersion(v SchemaTlsProtocol) {
	o.MinVersion = &v
}

func (o ViewsCustomCiphers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewsCustomCiphers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CipherSuites) {
		toSerialize["cipher_suites"] = o.CipherSuites
	}
	if !IsNil(o.MaxVersion) {
		toSerialize["max_version"] = o.MaxVersion
	}
	if !IsNil(o.MinVersion) {
		toSerialize["min_version"] = o.MinVersion
	}
	return toSerialize, nil
}

type NullableViewsCustomCiphers struct {
	value *ViewsCustomCiphers
	isSet bool
}

func (v NullableViewsCustomCiphers) Get() *ViewsCustomCiphers {
	return v.value
}

func (v *NullableViewsCustomCiphers) Set(val *ViewsCustomCiphers) {
	v.value = val
	v.isSet = true
}

func (v NullableViewsCustomCiphers) IsSet() bool {
	return v.isSet
}

func (v *NullableViewsCustomCiphers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewsCustomCiphers(val *ViewsCustomCiphers) *NullableViewsCustomCiphers {
	return &NullableViewsCustomCiphers{value: val, isSet: true}
}

func (v NullableViewsCustomCiphers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewsCustomCiphers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


