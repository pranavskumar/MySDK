/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerPrivateIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerPrivateIP{}

// OriginPoolOriginServerPrivateIP Specify origin server with private or public IP address and site information
type OriginPoolOriginServerPrivateIP struct {
	// This can be used for messages where no values are needed
	InsideNetwork map[string]interface{} `json:"inside_network,omitempty"`
	// Exclusive with []  Private IPV4 address  Example: ` \"8.8.8.8\"`  Validation Rules:   ves.io.schema.rules.string.ipv4: true 
	Ip *string `json:"ip,omitempty"`
	// This can be used for messages where no values are needed
	OutsideNetwork map[string]interface{} `json:"outside_network,omitempty"`
	SiteLocator *ViewsSiteLocator `json:"site_locator,omitempty"`
}

// NewOriginPoolOriginServerPrivateIP instantiates a new OriginPoolOriginServerPrivateIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerPrivateIP() *OriginPoolOriginServerPrivateIP {
	this := OriginPoolOriginServerPrivateIP{}
	return &this
}

// NewOriginPoolOriginServerPrivateIPWithDefaults instantiates a new OriginPoolOriginServerPrivateIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerPrivateIPWithDefaults() *OriginPoolOriginServerPrivateIP {
	this := OriginPoolOriginServerPrivateIP{}
	return &this
}

// GetInsideNetwork returns the InsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateIP) GetInsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.InsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.InsideNetwork
}

// GetInsideNetworkOk returns a tuple with the InsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateIP) GetInsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.InsideNetwork, true
}

// HasInsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateIP) HasInsideNetwork() bool {
	if o != nil && !IsNil(o.InsideNetwork) {
		return true
	}

	return false
}

// SetInsideNetwork gets a reference to the given map[string]interface{} and assigns it to the InsideNetwork field.
func (o *OriginPoolOriginServerPrivateIP) SetInsideNetwork(v map[string]interface{}) {
	o.InsideNetwork = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateIP) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateIP) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateIP) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *OriginPoolOriginServerPrivateIP) SetIp(v string) {
	o.Ip = &v
}

// GetOutsideNetwork returns the OutsideNetwork field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateIP) GetOutsideNetwork() map[string]interface{} {
	if o == nil || IsNil(o.OutsideNetwork) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutsideNetwork
}

// GetOutsideNetworkOk returns a tuple with the OutsideNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateIP) GetOutsideNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutsideNetwork) {
		return map[string]interface{}{}, false
	}
	return o.OutsideNetwork, true
}

// HasOutsideNetwork returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateIP) HasOutsideNetwork() bool {
	if o != nil && !IsNil(o.OutsideNetwork) {
		return true
	}

	return false
}

// SetOutsideNetwork gets a reference to the given map[string]interface{} and assigns it to the OutsideNetwork field.
func (o *OriginPoolOriginServerPrivateIP) SetOutsideNetwork(v map[string]interface{}) {
	o.OutsideNetwork = v
}

// GetSiteLocator returns the SiteLocator field value if set, zero value otherwise.
func (o *OriginPoolOriginServerPrivateIP) GetSiteLocator() ViewsSiteLocator {
	if o == nil || IsNil(o.SiteLocator) {
		var ret ViewsSiteLocator
		return ret
	}
	return *o.SiteLocator
}

// GetSiteLocatorOk returns a tuple with the SiteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerPrivateIP) GetSiteLocatorOk() (*ViewsSiteLocator, bool) {
	if o == nil || IsNil(o.SiteLocator) {
		return nil, false
	}
	return o.SiteLocator, true
}

// HasSiteLocator returns a boolean if a field has been set.
func (o *OriginPoolOriginServerPrivateIP) HasSiteLocator() bool {
	if o != nil && !IsNil(o.SiteLocator) {
		return true
	}

	return false
}

// SetSiteLocator gets a reference to the given ViewsSiteLocator and assigns it to the SiteLocator field.
func (o *OriginPoolOriginServerPrivateIP) SetSiteLocator(v ViewsSiteLocator) {
	o.SiteLocator = &v
}

func (o OriginPoolOriginServerPrivateIP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerPrivateIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InsideNetwork) {
		toSerialize["inside_network"] = o.InsideNetwork
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.OutsideNetwork) {
		toSerialize["outside_network"] = o.OutsideNetwork
	}
	if !IsNil(o.SiteLocator) {
		toSerialize["site_locator"] = o.SiteLocator
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerPrivateIP struct {
	value *OriginPoolOriginServerPrivateIP
	isSet bool
}

func (v NullableOriginPoolOriginServerPrivateIP) Get() *OriginPoolOriginServerPrivateIP {
	return v.value
}

func (v *NullableOriginPoolOriginServerPrivateIP) Set(val *OriginPoolOriginServerPrivateIP) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerPrivateIP) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerPrivateIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerPrivateIP(val *OriginPoolOriginServerPrivateIP) *NullableOriginPoolOriginServerPrivateIP {
	return &NullableOriginPoolOriginServerPrivateIP{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerPrivateIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerPrivateIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


