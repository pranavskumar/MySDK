/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolSpecType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolSpecType{}

// OriginPoolSpecType struct for OriginPoolSpecType
type OriginPoolSpecType struct {
	GcSpec *ViewsoriginPoolGlobalSpecType `json:"gc_spec,omitempty"`
}

// NewOriginPoolSpecType instantiates a new OriginPoolSpecType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolSpecType() *OriginPoolSpecType {
	this := OriginPoolSpecType{}
	return &this
}

// NewOriginPoolSpecTypeWithDefaults instantiates a new OriginPoolSpecType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolSpecTypeWithDefaults() *OriginPoolSpecType {
	this := OriginPoolSpecType{}
	return &this
}

// GetGcSpec returns the GcSpec field value if set, zero value otherwise.
func (o *OriginPoolSpecType) GetGcSpec() ViewsoriginPoolGlobalSpecType {
	if o == nil || IsNil(o.GcSpec) {
		var ret ViewsoriginPoolGlobalSpecType
		return ret
	}
	return *o.GcSpec
}

// GetGcSpecOk returns a tuple with the GcSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolSpecType) GetGcSpecOk() (*ViewsoriginPoolGlobalSpecType, bool) {
	if o == nil || IsNil(o.GcSpec) {
		return nil, false
	}
	return o.GcSpec, true
}

// HasGcSpec returns a boolean if a field has been set.
func (o *OriginPoolSpecType) HasGcSpec() bool {
	if o != nil && !IsNil(o.GcSpec) {
		return true
	}

	return false
}

// SetGcSpec gets a reference to the given ViewsoriginPoolGlobalSpecType and assigns it to the GcSpec field.
func (o *OriginPoolSpecType) SetGcSpec(v ViewsoriginPoolGlobalSpecType) {
	o.GcSpec = &v
}

func (o OriginPoolSpecType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolSpecType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GcSpec) {
		toSerialize["gc_spec"] = o.GcSpec
	}
	return toSerialize, nil
}

type NullableOriginPoolSpecType struct {
	value *OriginPoolSpecType
	isSet bool
}

func (v NullableOriginPoolSpecType) Get() *OriginPoolSpecType {
	return v.value
}

func (v *NullableOriginPoolSpecType) Set(val *OriginPoolSpecType) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolSpecType) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolSpecType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolSpecType(val *OriginPoolSpecType) *NullableOriginPoolSpecType {
	return &NullableOriginPoolSpecType{value: val, isSet: true}
}

func (v NullableOriginPoolSpecType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolSpecType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


