/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ViewsoriginPoolCreateSpecType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewsoriginPoolCreateSpecType{}

// ViewsoriginPoolCreateSpecType Shape of the origin pool create specification
type ViewsoriginPoolCreateSpecType struct {
	AdvancedOptions *OriginPoolOriginPoolAdvancedOptions `json:"advanced_options,omitempty"`
	// This can be used for messages where no values are needed
	AutomaticPort map[string]interface{} `json:"automatic_port,omitempty"`
	EndpointSelection *ClusterEndpointSelectionPolicy `json:"endpoint_selection,omitempty"`
	// Exclusive with [same_as_endpoint_port]  Port used for performing health check  Validation Rules:   ves.io.schema.rules.uint32.lte: 65535 
	HealthCheckPort *int64 `json:"health_check_port,omitempty"`
	//  Reference to healthcheck configuration objects  Validation Rules:   ves.io.schema.rules.repeated.max_items: 4 
	Healthcheck []SchemaviewsObjectRefType `json:"healthcheck,omitempty"`
	// This can be used for messages where no values are needed
	LbPort map[string]interface{} `json:"lb_port,omitempty"`
	LoadbalancerAlgorithm *ClusterLoadbalancerAlgorithm `json:"loadbalancer_algorithm,omitempty"`
	// This can be used for messages where no values are needed
	NoTls map[string]interface{} `json:"no_tls,omitempty"`
	//  List of origin servers in this pool  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true   ves.io.schema.rules.repeated.max_items: 32   ves.io.schema.rules.repeated.min_items: 1   ves.io.schema.rules.repeated.unique: true 
	OriginServers []OriginPoolOriginServerType `json:"origin_servers,omitempty"`
	// Exclusive with [automatic_port lb_port]  Endpoint service is available on this port  Example: ` \"9080\"`  Validation Rules:   ves.io.schema.rules.uint32.gte: 1   ves.io.schema.rules.uint32.lte: 65535 
	Port *int64 `json:"port,omitempty"`
	// This can be used for messages where no values are needed
	SameAsEndpointPort map[string]interface{} `json:"same_as_endpoint_port,omitempty"`
	UseTls *OriginPoolUpstreamTlsParameters `json:"use_tls,omitempty"`
}

// NewViewsoriginPoolCreateSpecType instantiates a new ViewsoriginPoolCreateSpecType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewsoriginPoolCreateSpecType() *ViewsoriginPoolCreateSpecType {
	this := ViewsoriginPoolCreateSpecType{}
	var endpointSelection ClusterEndpointSelectionPolicy = DISTRIBUTED
	this.EndpointSelection = &endpointSelection
	var loadbalancerAlgorithm ClusterLoadbalancerAlgorithm = ROUND_ROBIN
	this.LoadbalancerAlgorithm = &loadbalancerAlgorithm
	return &this
}

// NewViewsoriginPoolCreateSpecTypeWithDefaults instantiates a new ViewsoriginPoolCreateSpecType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewsoriginPoolCreateSpecTypeWithDefaults() *ViewsoriginPoolCreateSpecType {
	this := ViewsoriginPoolCreateSpecType{}
	var endpointSelection ClusterEndpointSelectionPolicy = DISTRIBUTED
	this.EndpointSelection = &endpointSelection
	var loadbalancerAlgorithm ClusterLoadbalancerAlgorithm = ROUND_ROBIN
	this.LoadbalancerAlgorithm = &loadbalancerAlgorithm
	return &this
}

// GetAdvancedOptions returns the AdvancedOptions field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetAdvancedOptions() OriginPoolOriginPoolAdvancedOptions {
	if o == nil || IsNil(o.AdvancedOptions) {
		var ret OriginPoolOriginPoolAdvancedOptions
		return ret
	}
	return *o.AdvancedOptions
}

// GetAdvancedOptionsOk returns a tuple with the AdvancedOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetAdvancedOptionsOk() (*OriginPoolOriginPoolAdvancedOptions, bool) {
	if o == nil || IsNil(o.AdvancedOptions) {
		return nil, false
	}
	return o.AdvancedOptions, true
}

// HasAdvancedOptions returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasAdvancedOptions() bool {
	if o != nil && !IsNil(o.AdvancedOptions) {
		return true
	}

	return false
}

// SetAdvancedOptions gets a reference to the given OriginPoolOriginPoolAdvancedOptions and assigns it to the AdvancedOptions field.
func (o *ViewsoriginPoolCreateSpecType) SetAdvancedOptions(v OriginPoolOriginPoolAdvancedOptions) {
	o.AdvancedOptions = &v
}

// GetAutomaticPort returns the AutomaticPort field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetAutomaticPort() map[string]interface{} {
	if o == nil || IsNil(o.AutomaticPort) {
		var ret map[string]interface{}
		return ret
	}
	return o.AutomaticPort
}

// GetAutomaticPortOk returns a tuple with the AutomaticPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetAutomaticPortOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AutomaticPort) {
		return map[string]interface{}{}, false
	}
	return o.AutomaticPort, true
}

// HasAutomaticPort returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasAutomaticPort() bool {
	if o != nil && !IsNil(o.AutomaticPort) {
		return true
	}

	return false
}

// SetAutomaticPort gets a reference to the given map[string]interface{} and assigns it to the AutomaticPort field.
func (o *ViewsoriginPoolCreateSpecType) SetAutomaticPort(v map[string]interface{}) {
	o.AutomaticPort = v
}

// GetEndpointSelection returns the EndpointSelection field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetEndpointSelection() ClusterEndpointSelectionPolicy {
	if o == nil || IsNil(o.EndpointSelection) {
		var ret ClusterEndpointSelectionPolicy
		return ret
	}
	return *o.EndpointSelection
}

// GetEndpointSelectionOk returns a tuple with the EndpointSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetEndpointSelectionOk() (*ClusterEndpointSelectionPolicy, bool) {
	if o == nil || IsNil(o.EndpointSelection) {
		return nil, false
	}
	return o.EndpointSelection, true
}

// HasEndpointSelection returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasEndpointSelection() bool {
	if o != nil && !IsNil(o.EndpointSelection) {
		return true
	}

	return false
}

// SetEndpointSelection gets a reference to the given ClusterEndpointSelectionPolicy and assigns it to the EndpointSelection field.
func (o *ViewsoriginPoolCreateSpecType) SetEndpointSelection(v ClusterEndpointSelectionPolicy) {
	o.EndpointSelection = &v
}

// GetHealthCheckPort returns the HealthCheckPort field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetHealthCheckPort() int64 {
	if o == nil || IsNil(o.HealthCheckPort) {
		var ret int64
		return ret
	}
	return *o.HealthCheckPort
}

// GetHealthCheckPortOk returns a tuple with the HealthCheckPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetHealthCheckPortOk() (*int64, bool) {
	if o == nil || IsNil(o.HealthCheckPort) {
		return nil, false
	}
	return o.HealthCheckPort, true
}

// HasHealthCheckPort returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasHealthCheckPort() bool {
	if o != nil && !IsNil(o.HealthCheckPort) {
		return true
	}

	return false
}

// SetHealthCheckPort gets a reference to the given int64 and assigns it to the HealthCheckPort field.
func (o *ViewsoriginPoolCreateSpecType) SetHealthCheckPort(v int64) {
	o.HealthCheckPort = &v
}

// GetHealthcheck returns the Healthcheck field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetHealthcheck() []SchemaviewsObjectRefType {
	if o == nil || IsNil(o.Healthcheck) {
		var ret []SchemaviewsObjectRefType
		return ret
	}
	return o.Healthcheck
}

// GetHealthcheckOk returns a tuple with the Healthcheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetHealthcheckOk() ([]SchemaviewsObjectRefType, bool) {
	if o == nil || IsNil(o.Healthcheck) {
		return nil, false
	}
	return o.Healthcheck, true
}

// HasHealthcheck returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasHealthcheck() bool {
	if o != nil && !IsNil(o.Healthcheck) {
		return true
	}

	return false
}

// SetHealthcheck gets a reference to the given []SchemaviewsObjectRefType and assigns it to the Healthcheck field.
func (o *ViewsoriginPoolCreateSpecType) SetHealthcheck(v []SchemaviewsObjectRefType) {
	o.Healthcheck = v
}

// GetLbPort returns the LbPort field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetLbPort() map[string]interface{} {
	if o == nil || IsNil(o.LbPort) {
		var ret map[string]interface{}
		return ret
	}
	return o.LbPort
}

// GetLbPortOk returns a tuple with the LbPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetLbPortOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LbPort) {
		return map[string]interface{}{}, false
	}
	return o.LbPort, true
}

// HasLbPort returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasLbPort() bool {
	if o != nil && !IsNil(o.LbPort) {
		return true
	}

	return false
}

// SetLbPort gets a reference to the given map[string]interface{} and assigns it to the LbPort field.
func (o *ViewsoriginPoolCreateSpecType) SetLbPort(v map[string]interface{}) {
	o.LbPort = v
}

// GetLoadbalancerAlgorithm returns the LoadbalancerAlgorithm field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetLoadbalancerAlgorithm() ClusterLoadbalancerAlgorithm {
	if o == nil || IsNil(o.LoadbalancerAlgorithm) {
		var ret ClusterLoadbalancerAlgorithm
		return ret
	}
	return *o.LoadbalancerAlgorithm
}

// GetLoadbalancerAlgorithmOk returns a tuple with the LoadbalancerAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetLoadbalancerAlgorithmOk() (*ClusterLoadbalancerAlgorithm, bool) {
	if o == nil || IsNil(o.LoadbalancerAlgorithm) {
		return nil, false
	}
	return o.LoadbalancerAlgorithm, true
}

// HasLoadbalancerAlgorithm returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasLoadbalancerAlgorithm() bool {
	if o != nil && !IsNil(o.LoadbalancerAlgorithm) {
		return true
	}

	return false
}

// SetLoadbalancerAlgorithm gets a reference to the given ClusterLoadbalancerAlgorithm and assigns it to the LoadbalancerAlgorithm field.
func (o *ViewsoriginPoolCreateSpecType) SetLoadbalancerAlgorithm(v ClusterLoadbalancerAlgorithm) {
	o.LoadbalancerAlgorithm = &v
}

// GetNoTls returns the NoTls field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetNoTls() map[string]interface{} {
	if o == nil || IsNil(o.NoTls) {
		var ret map[string]interface{}
		return ret
	}
	return o.NoTls
}

// GetNoTlsOk returns a tuple with the NoTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetNoTlsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NoTls) {
		return map[string]interface{}{}, false
	}
	return o.NoTls, true
}

// HasNoTls returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasNoTls() bool {
	if o != nil && !IsNil(o.NoTls) {
		return true
	}

	return false
}

// SetNoTls gets a reference to the given map[string]interface{} and assigns it to the NoTls field.
func (o *ViewsoriginPoolCreateSpecType) SetNoTls(v map[string]interface{}) {
	o.NoTls = v
}

// GetOriginServers returns the OriginServers field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetOriginServers() []OriginPoolOriginServerType {
	if o == nil || IsNil(o.OriginServers) {
		var ret []OriginPoolOriginServerType
		return ret
	}
	return o.OriginServers
}

// GetOriginServersOk returns a tuple with the OriginServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetOriginServersOk() ([]OriginPoolOriginServerType, bool) {
	if o == nil || IsNil(o.OriginServers) {
		return nil, false
	}
	return o.OriginServers, true
}

// HasOriginServers returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasOriginServers() bool {
	if o != nil && !IsNil(o.OriginServers) {
		return true
	}

	return false
}

// SetOriginServers gets a reference to the given []OriginPoolOriginServerType and assigns it to the OriginServers field.
func (o *ViewsoriginPoolCreateSpecType) SetOriginServers(v []OriginPoolOriginServerType) {
	o.OriginServers = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *ViewsoriginPoolCreateSpecType) SetPort(v int64) {
	o.Port = &v
}

// GetSameAsEndpointPort returns the SameAsEndpointPort field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetSameAsEndpointPort() map[string]interface{} {
	if o == nil || IsNil(o.SameAsEndpointPort) {
		var ret map[string]interface{}
		return ret
	}
	return o.SameAsEndpointPort
}

// GetSameAsEndpointPortOk returns a tuple with the SameAsEndpointPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetSameAsEndpointPortOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SameAsEndpointPort) {
		return map[string]interface{}{}, false
	}
	return o.SameAsEndpointPort, true
}

// HasSameAsEndpointPort returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasSameAsEndpointPort() bool {
	if o != nil && !IsNil(o.SameAsEndpointPort) {
		return true
	}

	return false
}

// SetSameAsEndpointPort gets a reference to the given map[string]interface{} and assigns it to the SameAsEndpointPort field.
func (o *ViewsoriginPoolCreateSpecType) SetSameAsEndpointPort(v map[string]interface{}) {
	o.SameAsEndpointPort = v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *ViewsoriginPoolCreateSpecType) GetUseTls() OriginPoolUpstreamTlsParameters {
	if o == nil || IsNil(o.UseTls) {
		var ret OriginPoolUpstreamTlsParameters
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewsoriginPoolCreateSpecType) GetUseTlsOk() (*OriginPoolUpstreamTlsParameters, bool) {
	if o == nil || IsNil(o.UseTls) {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *ViewsoriginPoolCreateSpecType) HasUseTls() bool {
	if o != nil && !IsNil(o.UseTls) {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given OriginPoolUpstreamTlsParameters and assigns it to the UseTls field.
func (o *ViewsoriginPoolCreateSpecType) SetUseTls(v OriginPoolUpstreamTlsParameters) {
	o.UseTls = &v
}

func (o ViewsoriginPoolCreateSpecType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewsoriginPoolCreateSpecType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvancedOptions) {
		toSerialize["advanced_options"] = o.AdvancedOptions
	}
	if !IsNil(o.AutomaticPort) {
		toSerialize["automatic_port"] = o.AutomaticPort
	}
	if !IsNil(o.EndpointSelection) {
		toSerialize["endpoint_selection"] = o.EndpointSelection
	}
	if !IsNil(o.HealthCheckPort) {
		toSerialize["health_check_port"] = o.HealthCheckPort
	}
	if !IsNil(o.Healthcheck) {
		toSerialize["healthcheck"] = o.Healthcheck
	}
	if !IsNil(o.LbPort) {
		toSerialize["lb_port"] = o.LbPort
	}
	if !IsNil(o.LoadbalancerAlgorithm) {
		toSerialize["loadbalancer_algorithm"] = o.LoadbalancerAlgorithm
	}
	if !IsNil(o.NoTls) {
		toSerialize["no_tls"] = o.NoTls
	}
	if !IsNil(o.OriginServers) {
		toSerialize["origin_servers"] = o.OriginServers
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.SameAsEndpointPort) {
		toSerialize["same_as_endpoint_port"] = o.SameAsEndpointPort
	}
	if !IsNil(o.UseTls) {
		toSerialize["use_tls"] = o.UseTls
	}
	return toSerialize, nil
}

type NullableViewsoriginPoolCreateSpecType struct {
	value *ViewsoriginPoolCreateSpecType
	isSet bool
}

func (v NullableViewsoriginPoolCreateSpecType) Get() *ViewsoriginPoolCreateSpecType {
	return v.value
}

func (v *NullableViewsoriginPoolCreateSpecType) Set(val *ViewsoriginPoolCreateSpecType) {
	v.value = val
	v.isSet = true
}

func (v NullableViewsoriginPoolCreateSpecType) IsSet() bool {
	return v.isSet
}

func (v *NullableViewsoriginPoolCreateSpecType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewsoriginPoolCreateSpecType(val *ViewsoriginPoolCreateSpecType) *NullableViewsoriginPoolCreateSpecType {
	return &NullableViewsoriginPoolCreateSpecType{value: val, isSet: true}
}

func (v NullableViewsoriginPoolCreateSpecType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewsoriginPoolCreateSpecType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


