/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginPoolSubsets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginPoolSubsets{}

// OriginPoolOriginPoolSubsets Configure subset options for origin pool
type OriginPoolOriginPoolSubsets struct {
	// This can be used for messages where no values are needed
	AnyEndpoint map[string]interface{} `json:"any_endpoint,omitempty"`
	DefaultSubset *OriginPoolOriginPoolDefaultSubset `json:"default_subset,omitempty"`
	//  List of subset class. Subsets class is defined using list of keys. Every unique combination of values of these keys form a subset withing the class.  Required: YES  Validation Rules:   ves.io.schema.rules.message.required: true   ves.io.schema.rules.repeated.max_items: 32 
	EndpointSubsets []ClusterEndpointSubsetSelectorType `json:"endpoint_subsets,omitempty"`
	// This can be used for messages where no values are needed
	FailRequest map[string]interface{} `json:"fail_request,omitempty"`
}

// NewOriginPoolOriginPoolSubsets instantiates a new OriginPoolOriginPoolSubsets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginPoolSubsets() *OriginPoolOriginPoolSubsets {
	this := OriginPoolOriginPoolSubsets{}
	return &this
}

// NewOriginPoolOriginPoolSubsetsWithDefaults instantiates a new OriginPoolOriginPoolSubsets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginPoolSubsetsWithDefaults() *OriginPoolOriginPoolSubsets {
	this := OriginPoolOriginPoolSubsets{}
	return &this
}

// GetAnyEndpoint returns the AnyEndpoint field value if set, zero value otherwise.
func (o *OriginPoolOriginPoolSubsets) GetAnyEndpoint() map[string]interface{} {
	if o == nil || IsNil(o.AnyEndpoint) {
		var ret map[string]interface{}
		return ret
	}
	return o.AnyEndpoint
}

// GetAnyEndpointOk returns a tuple with the AnyEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginPoolSubsets) GetAnyEndpointOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AnyEndpoint) {
		return map[string]interface{}{}, false
	}
	return o.AnyEndpoint, true
}

// HasAnyEndpoint returns a boolean if a field has been set.
func (o *OriginPoolOriginPoolSubsets) HasAnyEndpoint() bool {
	if o != nil && !IsNil(o.AnyEndpoint) {
		return true
	}

	return false
}

// SetAnyEndpoint gets a reference to the given map[string]interface{} and assigns it to the AnyEndpoint field.
func (o *OriginPoolOriginPoolSubsets) SetAnyEndpoint(v map[string]interface{}) {
	o.AnyEndpoint = v
}

// GetDefaultSubset returns the DefaultSubset field value if set, zero value otherwise.
func (o *OriginPoolOriginPoolSubsets) GetDefaultSubset() OriginPoolOriginPoolDefaultSubset {
	if o == nil || IsNil(o.DefaultSubset) {
		var ret OriginPoolOriginPoolDefaultSubset
		return ret
	}
	return *o.DefaultSubset
}

// GetDefaultSubsetOk returns a tuple with the DefaultSubset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginPoolSubsets) GetDefaultSubsetOk() (*OriginPoolOriginPoolDefaultSubset, bool) {
	if o == nil || IsNil(o.DefaultSubset) {
		return nil, false
	}
	return o.DefaultSubset, true
}

// HasDefaultSubset returns a boolean if a field has been set.
func (o *OriginPoolOriginPoolSubsets) HasDefaultSubset() bool {
	if o != nil && !IsNil(o.DefaultSubset) {
		return true
	}

	return false
}

// SetDefaultSubset gets a reference to the given OriginPoolOriginPoolDefaultSubset and assigns it to the DefaultSubset field.
func (o *OriginPoolOriginPoolSubsets) SetDefaultSubset(v OriginPoolOriginPoolDefaultSubset) {
	o.DefaultSubset = &v
}

// GetEndpointSubsets returns the EndpointSubsets field value if set, zero value otherwise.
func (o *OriginPoolOriginPoolSubsets) GetEndpointSubsets() []ClusterEndpointSubsetSelectorType {
	if o == nil || IsNil(o.EndpointSubsets) {
		var ret []ClusterEndpointSubsetSelectorType
		return ret
	}
	return o.EndpointSubsets
}

// GetEndpointSubsetsOk returns a tuple with the EndpointSubsets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginPoolSubsets) GetEndpointSubsetsOk() ([]ClusterEndpointSubsetSelectorType, bool) {
	if o == nil || IsNil(o.EndpointSubsets) {
		return nil, false
	}
	return o.EndpointSubsets, true
}

// HasEndpointSubsets returns a boolean if a field has been set.
func (o *OriginPoolOriginPoolSubsets) HasEndpointSubsets() bool {
	if o != nil && !IsNil(o.EndpointSubsets) {
		return true
	}

	return false
}

// SetEndpointSubsets gets a reference to the given []ClusterEndpointSubsetSelectorType and assigns it to the EndpointSubsets field.
func (o *OriginPoolOriginPoolSubsets) SetEndpointSubsets(v []ClusterEndpointSubsetSelectorType) {
	o.EndpointSubsets = v
}

// GetFailRequest returns the FailRequest field value if set, zero value otherwise.
func (o *OriginPoolOriginPoolSubsets) GetFailRequest() map[string]interface{} {
	if o == nil || IsNil(o.FailRequest) {
		var ret map[string]interface{}
		return ret
	}
	return o.FailRequest
}

// GetFailRequestOk returns a tuple with the FailRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginPoolSubsets) GetFailRequestOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FailRequest) {
		return map[string]interface{}{}, false
	}
	return o.FailRequest, true
}

// HasFailRequest returns a boolean if a field has been set.
func (o *OriginPoolOriginPoolSubsets) HasFailRequest() bool {
	if o != nil && !IsNil(o.FailRequest) {
		return true
	}

	return false
}

// SetFailRequest gets a reference to the given map[string]interface{} and assigns it to the FailRequest field.
func (o *OriginPoolOriginPoolSubsets) SetFailRequest(v map[string]interface{}) {
	o.FailRequest = v
}

func (o OriginPoolOriginPoolSubsets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginPoolSubsets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnyEndpoint) {
		toSerialize["any_endpoint"] = o.AnyEndpoint
	}
	if !IsNil(o.DefaultSubset) {
		toSerialize["default_subset"] = o.DefaultSubset
	}
	if !IsNil(o.EndpointSubsets) {
		toSerialize["endpoint_subsets"] = o.EndpointSubsets
	}
	if !IsNil(o.FailRequest) {
		toSerialize["fail_request"] = o.FailRequest
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginPoolSubsets struct {
	value *OriginPoolOriginPoolSubsets
	isSet bool
}

func (v NullableOriginPoolOriginPoolSubsets) Get() *OriginPoolOriginPoolSubsets {
	return v.value
}

func (v *NullableOriginPoolOriginPoolSubsets) Set(val *OriginPoolOriginPoolSubsets) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginPoolSubsets) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginPoolSubsets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginPoolSubsets(val *OriginPoolOriginPoolSubsets) *NullableOriginPoolOriginPoolSubsets {
	return &NullableOriginPoolOriginPoolSubsets{value: val, isSet: true}
}

func (v NullableOriginPoolOriginPoolSubsets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginPoolSubsets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


