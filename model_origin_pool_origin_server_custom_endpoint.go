/*
F5 Distributed Cloud Services API for ves.io.schema.views.origin_pool

Origin pool is a view to create cluster and endpoints that can be used in HTTP loadbalancer or TCP loadbalancer  It will create following child objects  * cluster * endpoints * healthcheck

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginPoolOriginServerCustomEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginPoolOriginServerCustomEndpoint{}

// OriginPoolOriginServerCustomEndpoint Specify origin server with a reference to endpoint object
type OriginPoolOriginServerCustomEndpoint struct {
	Endpoint *SchemaviewsObjectRefType `json:"endpoint,omitempty"`
}

// NewOriginPoolOriginServerCustomEndpoint instantiates a new OriginPoolOriginServerCustomEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginPoolOriginServerCustomEndpoint() *OriginPoolOriginServerCustomEndpoint {
	this := OriginPoolOriginServerCustomEndpoint{}
	return &this
}

// NewOriginPoolOriginServerCustomEndpointWithDefaults instantiates a new OriginPoolOriginServerCustomEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginPoolOriginServerCustomEndpointWithDefaults() *OriginPoolOriginServerCustomEndpoint {
	this := OriginPoolOriginServerCustomEndpoint{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *OriginPoolOriginServerCustomEndpoint) GetEndpoint() SchemaviewsObjectRefType {
	if o == nil || IsNil(o.Endpoint) {
		var ret SchemaviewsObjectRefType
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginPoolOriginServerCustomEndpoint) GetEndpointOk() (*SchemaviewsObjectRefType, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *OriginPoolOriginServerCustomEndpoint) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given SchemaviewsObjectRefType and assigns it to the Endpoint field.
func (o *OriginPoolOriginServerCustomEndpoint) SetEndpoint(v SchemaviewsObjectRefType) {
	o.Endpoint = &v
}

func (o OriginPoolOriginServerCustomEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginPoolOriginServerCustomEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	return toSerialize, nil
}

type NullableOriginPoolOriginServerCustomEndpoint struct {
	value *OriginPoolOriginServerCustomEndpoint
	isSet bool
}

func (v NullableOriginPoolOriginServerCustomEndpoint) Get() *OriginPoolOriginServerCustomEndpoint {
	return v.value
}

func (v *NullableOriginPoolOriginServerCustomEndpoint) Set(val *OriginPoolOriginServerCustomEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginPoolOriginServerCustomEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginPoolOriginServerCustomEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginPoolOriginServerCustomEndpoint(val *OriginPoolOriginServerCustomEndpoint) *NullableOriginPoolOriginServerCustomEndpoint {
	return &NullableOriginPoolOriginServerCustomEndpoint{value: val, isSet: true}
}

func (v NullableOriginPoolOriginServerCustomEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginPoolOriginServerCustomEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


